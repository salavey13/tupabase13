@echo off
:: –õ–ï–ù–ò–í–´–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –ü–£–õ–õ –†–ï–ö–í–ï–°–¢–û–í –° –í–ê–®–ò–ú AI
:: –í–ï–†–°–ò–Ø –î–õ–Ø –†–£–°–°–ö–û–ô –õ–ï–ù–ò–í–û–ô –ö–û–ú–ê–ù–î–´

:: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
set REPO_URL=https://github.com/salavey13/tupabase13
set GIT_INSTALLER_URL=https://github.com/git-for-windows/git/releases/download/v2.42.0.windows.1/Git-2.42.0-64-bit.exe
set REPO_DIR=%USERPROFILE%\Documents\projects\tupabase13
set DEFAULT_AI_URL=https://bolt.new/~/bolt-nextjs-shadcn-pkcsgc

:: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
echo ============================================
echo üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –õ–ï–ù–ò–í–£–Æ –ö–û–ú–ê–ù–î–£ AI! üöÄ
echo ============================================
echo –°–µ–≥–æ–¥–Ω—è –º—ã –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º. –°–µ–≥–æ–¥–Ω—è –º—ã —É—á–∏–º **–ë–û–¢–ê** —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ –Ω–∞—Å!
echo –°—è–¥—å –ø–æ—É–¥–æ–±–Ω–µ–µ, –Ω–∞–ª–∏–≤–∞–π —á–∞–π. –°–µ–π—á–∞—Å —Ç—ã —Å—Ç–∞–Ω–µ—à—å –∫—Ä—É—Ç—ã–º –∫–æ–º–º–∏—Ç–µ—Ä–æ–º. üòé

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Git
echo üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Git...
git --version >nul 2>&1
if %ERRORLEVEL% neq 0 (
    echo üõ†Ô∏è Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–∫–∞—á–∏–≤–∞–µ–º –∏ —Å—Ç–∞–≤–∏–º –∑–∞ —Ç–µ–±—è!
    curl -L -o git_installer.exe %GIT_INSTALLER_URL%
    start /wait git_installer.exe /SILENT
    del git_installer.exe
    echo üîÑ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç...
    start "" "%~f0"
    exit /b
)

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
if not exist "%REPO_DIR%" (
    echo üõ†Ô∏è –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–ª–æ–Ω–∏—Ä—É–µ–º –µ–≥–æ...
    git clone %REPO_URL% "%REPO_DIR%"
    echo ‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω! –í–ø–µ—Ä—ë–¥!
) else (
    echo –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ. –í—Å—ë –≥–æ—Ç–æ–≤–æ!
)

cd "%REPO_DIR%"

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
if not exist "lib" (
    set RACE_WINNER=1
) else (
    set RACE_WINNER=0
)

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ VERSION
if exist "VERSION" (
    for /f "tokens=1-3" %%v in ('type VERSION') do (
        set CURRENT_VERSION=%%v
        set LAST_APPLIED_ZIP=%%w
    )
    echo –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞: %CURRENT_VERSION%, –ø–æ—Å–ª–µ–¥–Ω–∏–π ZIP: %LAST_APPLIED_ZIP%
) else (
    set CURRENT_VERSION=0
    set LAST_APPLIED_ZIP=
    echo 0 > VERSION
)

:: –ü–æ–∏—Å–∫ ZIP-–∞—Ä—Ö–∏–≤–æ–≤
echo üîç –ò—â–µ–º ZIP-–∞—Ä—Ö–∏–≤—ã —Å —Ç–≤–æ–∏–º –∫–æ–¥–æ–º...
setlocal enabledelayedexpansion
set ZIP_COUNT=0
set LATEST_ZIP=
set ZIP_FILES=

for %%f in ("%REPO_DIR%\*.zip") do (
    set /a ZIP_COUNT+=1
    set LATEST_ZIP=%%~nxf
    set ZIP_FILES=!ZIP_FILES! %%~nxf
)

:: –ï—Å–ª–∏ –Ω–µ—Ç ZIP –∏–ª–∏ –æ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω
if %ZIP_COUNT% equ 1 (
    if %RACE_WINNER% equ 0 (
        echo ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω ZIP, –∏ –æ–Ω —É–∂–µ –±—ã–ª –ø—Ä–∏–º–µ–Ω—ë–Ω.
        echo üîÑ –ü–æ–ª–æ–∂–∏ –ù–û–í–´–ô ZIP —Å—é–¥–∞: "%REPO_DIR%"
        echo üîÑ –ò –∑–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.
        pause
        explorer "%REPO_DIR%"
        exit /b
    )
) else if %ZIP_COUNT% gtr 1 (
    echo –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ ZIP-—Ñ–∞–π–ª–æ–≤. –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π:
    set /a i=1
    for %%f in (%ZIP_FILES%) do (
        echo [!i!] %%~f
        set "ZIP_!i!=%%~f"
        set /a i+=1
    )
    set /p ZIP_CHOICE="–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä ZIP-—Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–π): "
    if not defined ZIP_CHOICE set ZIP_CHOICE=%ZIP_COUNT%
    for /f "tokens=%ZIP_CHOICE%" %%f in ("%ZIP_FILES%") do set LATEST_ZIP=%%f
)

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —É–∂–µ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω–æ–º ZIP
findstr /c:"%LATEST_ZIP%" VERSION >nul 2>&1
if %ERRORLEVEL% equ 0 (
    echo üîÑ ZIP "%LATEST_ZIP%" —É–∂–µ –ø—Ä–∏–º–µ–Ω—ë–Ω. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è...
    powershell -Command "Expand-Archive -Force '%REPO_DIR%\%LATEST_ZIP%' -DestinationPath .\temp_unzip"
    for /d %%d in (temp_unzip\*) do set ROOT_UNPACKED_DIR=%%d
    xcopy /s /y "!ROOT_UNPACKED_DIR!\*" "%REPO_DIR%\temp_git_check"
    rmdir /s /q temp_unzip

    git diff --quiet "%REPO_DIR%\temp_git_check" >nul 2>&1
    if %ERRORLEVEL% equ 0 (
        echo üîÑ ZIP "%LATEST_ZIP%" –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π. –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º!
        rmdir /s /q "%REPO_DIR%\temp_git_check"
        pause
        exit /b
    ) else (
        echo ‚ö†Ô∏è ZIP "%LATEST_ZIP%" –∏–∑–º–µ–Ω—ë–Ω. –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    )
    rmdir /s /q "%REPO_DIR%\temp_git_check"
)

:: –ü—Ä–∏–º–µ–Ω—è–µ–º ZIP
echo üõ†Ô∏è –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º "%LATEST_ZIP%"...
powershell -Command "Expand-Archive -Force '%REPO_DIR%\%LATEST_ZIP%' -DestinationPath .\temp_unzip"
for /d %%d in (temp_unzip\*) do set ROOT_UNPACKED_DIR=%%d
xcopy /s /y "!ROOT_UNPACKED_DIR!\*" "%REPO_DIR%"
rmdir /s /q temp_unzip

:: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ VERSION
set /a NEXT_VERSION=%CURRENT_VERSION%+1
set AI_TOOL_URL=https://bolt.new/~/%LATEST_ZIP:~0,-4%
echo %NEXT_VERSION% %LATEST_ZIP% %AI_TOOL_URL% >> VERSION

:: –ò—Å–ø–æ–ª—å–∑—É–µ–º URL AI –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
if %RACE_WINNER% equ 1 (
    echo ====================================================================
    echo üèÜ –¢–´ –ü–û–ë–ï–î–ò–¢–ï–õ–¨ –ì–û–ù–ö–ò! üèÜ –ë–µ—Å—Å–º–µ—Ä—Ç–Ω–∞—è —Å–ª–∞–≤–∞ –∏ —É–≤–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥–µ –∑–∞ —Ç–æ–±–æ–π!
    echo ====================================================================
    echo –ù–∞–ø–∏—à–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞, —á—Ç–æ–±—ã —Ç–≤–æ–µ –∏–º—è –æ—Å—Ç–∞–ª–æ—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏:
    set /p COMMIT_MSG="–¢–≤–æ–π –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∫–æ–º–º–∏—Ç: "
) else (
    set COMMIT_MSG="üí• –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç %LATEST_ZIP% | –í–µ—Ä—Å–∏—è %NEXT_VERSION% | –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç AI: %AI_TOOL_URL%"
    echo ‚úÖ –¢—ã —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å —Å–≤–æ–π –≤–∫–ª–∞–¥! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –¥–≤–∏–≥–∞–π—Å—è –¥–∞–ª—å—à–µ!
)

:: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏ –∏ –∫–æ–º–º–∏—Ç–∞
set BRANCH_NAME=–±–æ—Ç_%DATE:~-4%%DATE:~-7,2%%DATE:~-10,2%_%TIME:~0,2%%TIME:~3,2%
git checkout -b %BRANCH_NAME%
git add .
git commit -m "%COMMIT_MSG%"


:: –ü—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ main
git push origin %BRANCH_NAME%
git checkout main
git pull origin main

:: –û—Ç–∫—Ä—ã—Ç–∏–µ PR –≤ –±—Ä–∞—É–∑–µ—Ä–µ
echo –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Pull Request –≤ —Ç–≤–æ—ë–º –±—Ä–∞—É–∑–µ—Ä–µ...
start "" "https://github.com/salavey13/tupabase13/pulls"

:: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
echo ============================================
echo ‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ! –¢–≤–æ–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–µ.
echo üåü –°–æ–∑–¥–∞–π Pull Request, —á—Ç–æ–±—ã —Ç–≤–æ–π –±–æ—Ç —Å—Ç–∞–ª —É–º–Ω–µ–µ! üåü
pause
